<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd"
	default-lazy-init="false">



	<!-- 注册了一个自定义的Conversion -->
	<mvc:annotation-driven conversion-service="conversionService" />

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	    <!-- 设定默认编码 -->
		<property name="defaultEncoding" value="UTF-8"></property>
		<!-- 指定所上传文件的总大小不能超过20M,单位为字节 -->
		<property name="maxUploadSize" value="20000000" />
	</bean>

	<bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<!-- 转换器 <bean class="a.b.c"/>  -->
			</list>

		</property>

	</bean>


	<!-- Forwards requests to the "/" resource to the "welcome" view <mvc:view-controller path="/" view-name="pre_login" /> 
		不使用这种方式，是因为有可能存在Cookie处理问题 -->

    <mvc:interceptors>
		<bean class="com.envisioncn.it.super_sonic.showcase.support.LoginInterceptor" />
	</mvc:interceptors>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ 
		directory -->
	<mvc:resources location="/resources/" mapping="/resources/**" /> 

	
	
	<!-- Application Message Bundle -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="/WEB-INF/messages/messages" />
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 这是个啥东西呢？是否用通用代码来代替语言，如zh就可以代替zh_CN,zh_TW等 <property name="useCodeAsDefaultMessage" value="true" /> -->
		<property name="cacheSeconds" value="0" />
		<!-- 在没有找到匹配的情况下，不调用系统语言环境 -->
		<property name="fallbackToSystemLocale" value="false" />
	</bean>
	<!--  i18n配置，暂时不用启动 -->
	<!-- 通过cookie改变语言 <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver"> <property 
		name="defaultLocale" value="en"/> </bean> -->

	<!-- Resolves view names to protected .jsp resources within the /WEB-INF/views directory <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<property name="prefix" value="/WEB-INF/view/" /> <property name="suffix" value=".jsp" /> </bean> -->

	<!-- 视图解析 -->
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/conf/tiles.xml</value>
			</list>
		</property>



	</bean>
	<bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="order" value="1" />
		<property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"></property>
	</bean>

	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/" />	
		<property name="suffix" value=".jsp" />		
		<property name="order" value="2" />
	</bean>
	


	<!-- 异常处理
	<bean id="handlerExceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="ext.mvc.AuthorizationException">/pre_login</prop>
			</props>
		</property>
	</bean>
 -->
	<context:component-scan base-package="com.envisioncn">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
		<context:exclude-filter type="annotation" expression="org.springframework.context.annotation.Configuration" /> 
	</context:component-scan>






</beans>